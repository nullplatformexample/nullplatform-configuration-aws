# Terraform gitignore

# Local .terraform directories
**/.terraform/*
# .tfstate files
*.tfstate
*.tfstate.*
terraform.tfvars
# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*.tfplan

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore .terraform.lock.hcl in some cases (uncomment if needed)
.terraform.lock.hcl

# Backend configuration files (may contain sensitive data)
backend.tf
backend.hcl

# Environment-specific variable files
dev.tfvars
prod.tfvars
staging.tfvars
test.tfvars

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Log files
*.log

# Temporary files
*.tmp
*.temp

# Backup files
*.backup
*.bak

# Archive files
*.zip
*.tar.gz
*.tgz

# SSL certificates (if stored locally)
*.pem
*.key
*.crt

# Kubernetes config files (if stored locally)
kubeconfig
*.kubeconfig

# AWS credentials (if accidentally placed in project)
.aws/
credentials

# SSH keys (if accidentally placed in project)
id_rsa
id_rsa.pub
*.ppk

# Terraform providers cache
.terraform.d/

# Local environment files
.env
.env.local
.env.*.local

# Python (if using Python scripts alongside Terraform)
__pycache__/
*.py[cod]
*$py.class

# Node.js (if using Node.js scripts alongside Terraform)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*